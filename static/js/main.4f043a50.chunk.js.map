{"version":3,"sources":["App.js","index.js"],"names":["App","props","getImage","a","image","document","getElementById","value","console","log","setState","state","user","this","activePanel","id","status","before","size","src","photo_100","first_name","header","mode","weight","type","onClick","style","textAlign","alt","React","Component","bridge","send","ReactDOM","render"],"mappings":"uTA6FeA,G,yDAxEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IASPC,SAVmB,sBAUR,4BAAAC,EAAA,sDACEC,EAAQC,SAASC,eAAe,OAAOC,MAE7CC,QAAQC,IAAI,CAACL,UAETA,GACT,EAAKM,SAAS,CAAEN,UANP,2CAPV,EAAKO,MAAQ,CACZC,KAAM,MAJW,E,qDAoBT,IAAD,EACgBC,KAAKF,MAArBC,EADA,EACAA,KAAMR,EADN,EACMA,MAEd,OACU,kBAAC,IAAD,CAAMU,YAAY,QACd,kBAAC,IAAD,CAAOC,GAAG,QACN,kBAAC,IAAD,KAEQH,EACI,kBAAC,IAAD,CACII,OAAO,wBACPC,OAAS,kBAAC,IAAD,CAAQC,KAAO,GAAKC,IAAMP,EAAKQ,aAEtCR,EAAKS,YAGnC,yBAIY,kBAAC,IAAD,CAAOC,OAAS,kBAAC,IAAD,CAAQC,KAAK,aAAb,+CAC9B,kBAAC,IAAD,okDAGA,kBAAC,IAAD,0TAC8E,kBAAC,IAAD,CAAMC,OAAO,YAAb,kCAD9E,4QAIkB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,OAAOV,GAAG,QAEtB,kBAAC,IAAD,CAAQG,KAAK,KAAKQ,QAAUb,KAAKX,UAAjC,6DAInBE,GACF,kBAAC,IAAD,CAAKuB,MAAO,CAAEC,UAAW,WACA,yBAAKT,IAAMf,EAAQyB,IAAI,mBAIzBjB,GACN,kBAAC,IAAD,cAAYR,U,GAhElB0B,IAAMC,YCZxBC,IAAOC,KAAK,eAAgB,IAE5BC,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAASC,eAAe,W","file":"static/js/main.4f043a50.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Div,\r\n    FormLayout,\r\n    Group,\r\n    Header,\r\n    Input,\r\n    Panel,\r\n    PanelHeader,\r\n    PanelHeaderContent,\r\n    Text,\r\n    View\r\n} from '@vkontakte/vkui';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tuser: null\r\n        };\r\n\t}\r\n\r\n\r\n\r\n\tgetImage = async () => {\r\n        const image = document.getElementById('url').value;\r\n\r\n        console.log({image});\r\n\r\n        if (image) {\r\n\t\t\tthis.setState({ image });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user, image } = this.state;\r\n\r\n\t\treturn (\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>\r\n\t\t\t\t\t\t{\r\n                            user ?\r\n                                <PanelHeaderContent\r\n                                    status=\"VK Apps Image Example\"\r\n                                    before={ <Avatar size={ 36 } src={ user.photo_100 } /> }\r\n                                >\r\n                                    { user.first_name }\r\n                                </PanelHeaderContent>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t'VK Apps Image Example'\r\n\t\t\t\t\t\t}\r\n                    </PanelHeader>\r\n\r\n                    <Group header={ <Header mode=\"secondary\">Задание</Header> }>\r\n\t\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t\tУ нас есть мини-приложение, которое имеет возможность загружать изображения по внешней ссылке. Увы, в приложении допущена ошибка, из-за чего удаленный сервер получает параметры запуска пользователей, которые вставляют ссылку. Нужно объяснить почему так происходит и исправить ситуацию красиво и лаконично.\r\n\t\t\t\t\t\t</Div>\r\n\t\t\t\t\t\t<Div>\r\n                            Для облегчения тестирования можно использовать картинку <Text weight=\"semibold\">https://service.pavel.im/image</Text> (good code — все круто, bad code — сервер получил параметры запуска)\r\n\t\t\t\t\t\t</Div>\r\n\r\n                        <FormLayout>\r\n                            <Input type=\"text\" id=\"url\" />\r\n\r\n                            <Button size=\"xl\" onClick={ this.getImage }>Загрузить</Button>\r\n                        </FormLayout>\r\n                        \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t!!image &&\r\n\t\t\t\t\t\t\t<Div style={{ textAlign: 'center' }}>\r\n                                <img src={ image } alt=\"remote file\" />\r\n\t\t\t\t\t\t\t</Div>\r\n\t\t\t\t\t\t}\r\n                        {\r\n                            !!user &&\r\n                        <Div>image={image}</Div>\r\n                        }\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;\r\n","import 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport App from './App';\r\n\r\nbridge.send('VKWebAppInit', {});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}